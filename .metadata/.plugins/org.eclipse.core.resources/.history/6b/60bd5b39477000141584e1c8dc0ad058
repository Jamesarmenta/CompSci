import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.awt.event.*;

import javax.swing.*;
import javax.imageio.ImageIO;

/**
 * 
 */

/**
 * @author jarmenta
 *
 * @see http://stackoverflow.com/questions/10880083/get-rgb-of-a-bufferedimage
 * @see https://docs.oracle.com/javase/tutorial/displayCode.html?code=https://docs.oracle.com/javase/tutorial/uiswing/examples/components/TopLevelDemoProject/src/components/TopLevelDemo.java
 */
public class FinalProject {

	public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
                getcreateAndShowGUI().add(new MyComponent());
            }
        });
    }
	
	public class MyComponent extends JComponent
    {
        @Override
        public void paint(Graphics g)
        {
            int height = 200;
            int width = 120;
            g.setColor(Color.red);
            g.drawRect(10, 10, height, width);
            g.setColor(Color.gray);
            g.fillRect(11, 11, height, width);
            g.setColor(Color.red);
            g.drawOval(250, 20, height, width);
            g.setColor(Color.magenta);
            g.fillOval(249, 19, height, width);
        }
    }
	
	private static void createAndShowGUI() {
		
		int red = 255;
		int green = 0;
		int blue = 255;
		
        //Create and set up the window.
        JFrame frame = new JFrame("TopLevelDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        //Create the menu bar.  Make it have a green background.
        JMenuBar greenMenuBar = new JMenuBar();
        greenMenuBar.setOpaque(true);
        greenMenuBar.setBackground(new Color(5, 255, 127));
        greenMenuBar.setPreferredSize(new Dimension(200, 200));
 
        //Create a yellow label to put in the content pane.
        JLabel yellowLabel = new JLabel();
        yellowLabel.setOpaque(true);
        yellowLabel.setBackground(new Color(0, 0, 255));
        yellowLabel.setPreferredSize(new Dimension(400, 400));
 
        //Set the menu bar and add the label to the content pane.
        frame.setJMenuBar(greenMenuBar);
 
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }

	
	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void getRgbValue() throws Exception {

	    BufferedImage image = ImageIO.read(
	         new File("src/red.png"));

	    int w = image.getWidth();
	    int h = image.getHeight();

	    int[] dataBuffInt = image.getRGB(0, 0, w, h, null, 0, w); 
	    //startX the starting X coordinate
	    //startY the starting Y coordinate
	    //w width of region
	    //h height of region
	    //rgbArray if not null, the rgb pixels are written here
	    //offset offset into the rgbArray
	    //scansize scanline stride for the rgbArray
	    
	    int wxh = (w * h)-1; //multiply width & height to get total number of pixels
	    
	    while (wxh>0){
	    Color c = new Color(dataBuffInt[wxh]);
	    //print RGB value of pixel, starting bottom up
	    System.out.println(c.getRed() + " " + c.getGreen() + " " + c.getBlue() + " " + c.getAlpha());   // = (dataBuffInt[100] >> 16) & 0xFF
	    //subtract after each iteration
	    wxh--;
	    }
	}

}
