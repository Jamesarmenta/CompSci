public class PowerFast {
	public static void main(String[] args)
	{
		int n = 2;
		int e = 30;
		
		long startNanoSeconds = System.nanoTime();
		int p = (power(n,e));
		long endNanoSeconds = System.nanoTime();
		System.out.println(p);
		System.out.println("Power:" + (endNanoSeconds - startNanoSeconds)/(double)Math.pow(10, 9) + "seconds.");
		
		System.out.println("");
		
		startNanoSeconds = System.nanoTime();
		int pfast = powerFast(n,e);
		endNanoSeconds = System.nanoTime();
		System.out.println(pfast);
		System.out.println("Power Fast:" + (endNanoSeconds - startNanoSeconds)/(double)Math.pow(10, 9) + "seconds.");
		System.out.println("");

	}
	
	public static int power(int n, int e)
	{
		int ans = 1;
		return power(n, e, ans);
	}
	
	public static int power(int n, int e, int ans)
	{
		if (e < 1) //base case
		{
			return ans;
		}
		else {
			e--;
			ans = n*power(n,e,ans);
		}
		
		return ans;
	}
	
	public static int powerFast(int n, int e)
	{
		int ans = 1;
		return powerFast(n, e, ans);
	}
	
	public static int powerFast(int n, int e, int ans)
	{
		if (e < 1) //base case
		{
			return ans;
		}
		if (e ==2)
		{
			return n*n;
		}
		else {
			if (n == 0)
			{
				return n;
			}
			if (n%2 == 0) //if even
			{
				e--;
				ans = n*n*powerFast(n,e/2,ans);
			}
			else //if odd
			{
				e--;
				ans = n*powerFast(n,e,ans);
			}
		}
		
		return ans;
	}
}
